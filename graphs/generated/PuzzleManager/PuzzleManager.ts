// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ListingCreated extends ethereum.Event {
  get params(): ListingCreated__Params {
    return new ListingCreated__Params(this);
  }
}

export class ListingCreated__Params {
  _event: ListingCreated;

  constructor(event: ListingCreated) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sellerTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get wants(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ListingDeleted extends ethereum.Event {
  get params(): ListingDeleted__Params {
    return new ListingDeleted__Params(this);
  }
}

export class ListingDeleted__Params {
  _event: ListingDeleted;

  constructor(event: ListingDeleted) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sellerTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get wanted(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class ListingSwapped extends ethereum.Event {
  get params(): ListingSwapped__Params {
    return new ListingSwapped__Params(this);
  }
}

export class ListingSwapped__Params {
  _event: ListingSwapped;

  constructor(event: ListingSwapped) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sellerTokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get buyerTokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get wanted(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PackPurchaseCompleted extends ethereum.Event {
  get params(): PackPurchaseCompleted__Params {
    return new PackPurchaseCompleted__Params(this);
  }
}

export class PackPurchaseCompleted__Params {
  _event: PackPurchaseCompleted;

  constructor(event: PackPurchaseCompleted) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class PackPurchaseRequested extends ethereum.Event {
  get params(): PackPurchaseRequested__Params {
    return new PackPurchaseRequested__Params(this);
  }
}

export class PackPurchaseRequested__Params {
  _event: PackPurchaseRequested;

  constructor(event: PackPurchaseRequested) {
    this._event = event;
  }

  get puzzleGroupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get requestId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get tier(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class PackUnboxed extends ethereum.Event {
  get params(): PackUnboxed__Params {
    return new PackUnboxed__Params(this);
  }
}

export class PackUnboxed__Params {
  _event: PackUnboxed;

  constructor(event: PackUnboxed) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PieceMinted extends ethereum.Event {
  get params(): PieceMinted__Params {
    return new PieceMinted__Params(this);
  }
}

export class PieceMinted__Params {
  _event: PieceMinted;

  constructor(event: PieceMinted) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get piece(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PrizeClaimed extends ethereum.Event {
  get params(): PrizeClaimed__Params {
    return new PrizeClaimed__Params(this);
  }
}

export class PrizeClaimed__Params {
  _event: PrizeClaimed;

  constructor(event: PrizeClaimed) {
    this._event = event;
  }

  get winner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get prize(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PuzzleEnded extends ethereum.Event {
  get params(): PuzzleEnded__Params {
    return new PuzzleEnded__Params(this);
  }
}

export class PuzzleEnded__Params {
  _event: PuzzleEnded;

  constructor(event: PuzzleEnded) {
    this._event = event;
  }

  get puzzleGroupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get puzzleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PuzzleSolved extends ethereum.Event {
  get params(): PuzzleSolved__Params {
    return new PuzzleSolved__Params(this);
  }
}

export class PuzzleSolved__Params {
  _event: PuzzleSolved;

  constructor(event: PuzzleSolved) {
    this._event = event;
  }

  get puzzleGroupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get puzzleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get prize(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class PuzzleStarted extends ethereum.Event {
  get params(): PuzzleStarted__Params {
    return new PuzzleStarted__Params(this);
  }
}

export class PuzzleStarted__Params {
  _event: PuzzleStarted;

  constructor(event: PuzzleStarted) {
    this._event = event;
  }

  get puzzleGroupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get puzzleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxWinners(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PuzzleManager__packsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: i32;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }
}

export class PuzzleManager__puzzleGroupToOngoingPuzzlesResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class PuzzleManager__winningsForUserResult {
  value0: string;
  value1: boolean;

  constructor(value0: string, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class PuzzleManager extends ethereum.SmartContract {
  static bind(address: Address): PuzzleManager {
    return new PuzzleManager("PuzzleManager", address);
  }

  activePuzzleGroups(param0: BigInt): BigInt {
    let result = super.call(
      "activePuzzleGroups",
      "activePuzzleGroups(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_activePuzzleGroups(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "activePuzzleGroups",
      "activePuzzleGroups(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  airdropPieces(recipient: Address, pieces: Array<string>): Array<BigInt> {
    let result = super.call(
      "airdropPieces",
      "airdropPieces(address,string[]):(uint256[])",
      [
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromStringArray(pieces)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_airdropPieces(
    recipient: Address,
    pieces: Array<string>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "airdropPieces",
      "airdropPieces(address,string[]):(uint256[])",
      [
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromStringArray(pieces)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  buyPackForTier(puzzleGroupId: BigInt, recipient: Address, tier: i32): Bytes {
    let result = super.call(
      "buyPackForTier",
      "buyPackForTier(uint256,address,uint8):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(puzzleGroupId),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tier))
      ]
    );

    return result[0].toBytes();
  }

  try_buyPackForTier(
    puzzleGroupId: BigInt,
    recipient: Address,
    tier: i32
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "buyPackForTier",
      "buyPackForTier(uint256,address,uint8):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(puzzleGroupId),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(tier))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  listingsForOwner(param0: Address, param1: BigInt, param2: string): boolean {
    let result = super.call(
      "listingsForOwner",
      "listingsForOwner(address,uint256,string):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromString(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_listingsForOwner(
    param0: Address,
    param1: BigInt,
    param2: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "listingsForOwner",
      "listingsForOwner(address,uint256,string):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromString(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  packContents(param0: i32): BigInt {
    let result = super.call("packContents", "packContents(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))
    ]);

    return result[0].toBigInt();
  }

  try_packContents(param0: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "packContents",
      "packContents(uint8):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  packPrices(param0: i32): BigInt {
    let result = super.call("packPrices", "packPrices(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))
    ]);

    return result[0].toBigInt();
  }

  try_packPrices(param0: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall("packPrices", "packPrices(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  packPurchaseStatusForGroup(param0: BigInt): boolean {
    let result = super.call(
      "packPurchaseStatusForGroup",
      "packPurchaseStatusForGroup(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_packPurchaseStatusForGroup(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "packPurchaseStatusForGroup",
      "packPurchaseStatusForGroup(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  packs(param0: Bytes): PuzzleManager__packsResult {
    let result = super.call(
      "packs",
      "packs(bytes32):(address,uint256,uint256,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new PuzzleManager__packsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toI32()
    );
  }

  try_packs(param0: Bytes): ethereum.CallResult<PuzzleManager__packsResult> {
    let result = super.tryCall(
      "packs",
      "packs(bytes32):(address,uint256,uint256,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PuzzleManager__packsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toI32()
      )
    );
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pieceFactory(): Address {
    let result = super.call("pieceFactory", "pieceFactory():(address)", []);

    return result[0].toAddress();
  }

  try_pieceFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("pieceFactory", "pieceFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  prizeFactory(): Address {
    let result = super.call("prizeFactory", "prizeFactory():(address)", []);

    return result[0].toAddress();
  }

  try_prizeFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("prizeFactory", "prizeFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  puzzleGroupToOngoingPuzzles(
    param0: BigInt,
    param1: BigInt
  ): PuzzleManager__puzzleGroupToOngoingPuzzlesResult {
    let result = super.call(
      "puzzleGroupToOngoingPuzzles",
      "puzzleGroupToOngoingPuzzles(uint256,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new PuzzleManager__puzzleGroupToOngoingPuzzlesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_puzzleGroupToOngoingPuzzles(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<PuzzleManager__puzzleGroupToOngoingPuzzlesResult> {
    let result = super.tryCall(
      "puzzleGroupToOngoingPuzzles",
      "puzzleGroupToOngoingPuzzles(uint256,uint256):(uint256,uint256,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PuzzleManager__puzzleGroupToOngoingPuzzlesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  slowMode(): boolean {
    let result = super.call("slowMode", "slowMode():(bool)", []);

    return result[0].toBoolean();
  }

  try_slowMode(): ethereum.CallResult<boolean> {
    let result = super.tryCall("slowMode", "slowMode():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  slowModeTime(): BigInt {
    let result = super.call("slowModeTime", "slowModeTime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_slowModeTime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("slowModeTime", "slowModeTime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unboxPack(requestId: Bytes): Array<BigInt> {
    let result = super.call("unboxPack", "unboxPack(bytes32):(uint256[])", [
      ethereum.Value.fromFixedBytes(requestId)
    ]);

    return result[0].toBigIntArray();
  }

  try_unboxPack(requestId: Bytes): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("unboxPack", "unboxPack(bytes32):(uint256[])", [
      ethereum.Value.fromFixedBytes(requestId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  usersTimers(param0: Address): BigInt {
    let result = super.call("usersTimers", "usersTimers(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_usersTimers(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "usersTimers",
      "usersTimers(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistedAddress(param0: Address): boolean {
    let result = super.call(
      "whitelistedAddress",
      "whitelistedAddress(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_whitelistedAddress(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "whitelistedAddress",
      "whitelistedAddress(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  winningsForUser(
    param0: Address,
    param1: BigInt
  ): PuzzleManager__winningsForUserResult {
    let result = super.call(
      "winningsForUser",
      "winningsForUser(address,uint256):(string,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new PuzzleManager__winningsForUserResult(
      result[0].toString(),
      result[1].toBoolean()
    );
  }

  try_winningsForUser(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<PuzzleManager__winningsForUserResult> {
    let result = super.tryCall(
      "winningsForUser",
      "winningsForUser(address,uint256):(string,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PuzzleManager__winningsForUserResult(
        value[0].toString(),
        value[1].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get pieceFactoryAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get prizeFactoryAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _beforePieceTransferCall extends ethereum.Call {
  get inputs(): _beforePieceTransferCall__Inputs {
    return new _beforePieceTransferCall__Inputs(this);
  }

  get outputs(): _beforePieceTransferCall__Outputs {
    return new _beforePieceTransferCall__Outputs(this);
  }
}

export class _beforePieceTransferCall__Inputs {
  _call: _beforePieceTransferCall;

  constructor(call: _beforePieceTransferCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _beforePieceTransferCall__Outputs {
  _call: _beforePieceTransferCall;

  constructor(call: _beforePieceTransferCall) {
    this._call = call;
  }
}

export class AirdropPiecesCall extends ethereum.Call {
  get inputs(): AirdropPiecesCall__Inputs {
    return new AirdropPiecesCall__Inputs(this);
  }

  get outputs(): AirdropPiecesCall__Outputs {
    return new AirdropPiecesCall__Outputs(this);
  }
}

export class AirdropPiecesCall__Inputs {
  _call: AirdropPiecesCall;

  constructor(call: AirdropPiecesCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get pieces(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class AirdropPiecesCall__Outputs {
  _call: AirdropPiecesCall;

  constructor(call: AirdropPiecesCall) {
    this._call = call;
  }

  get value0(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }
}

export class BuyPackForTierCall extends ethereum.Call {
  get inputs(): BuyPackForTierCall__Inputs {
    return new BuyPackForTierCall__Inputs(this);
  }

  get outputs(): BuyPackForTierCall__Outputs {
    return new BuyPackForTierCall__Outputs(this);
  }
}

export class BuyPackForTierCall__Inputs {
  _call: BuyPackForTierCall;

  constructor(call: BuyPackForTierCall) {
    this._call = call;
  }

  get puzzleGroupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tier(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class BuyPackForTierCall__Outputs {
  _call: BuyPackForTierCall;

  constructor(call: BuyPackForTierCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ClaimPrizeCall extends ethereum.Call {
  get inputs(): ClaimPrizeCall__Inputs {
    return new ClaimPrizeCall__Inputs(this);
  }

  get outputs(): ClaimPrizeCall__Outputs {
    return new ClaimPrizeCall__Outputs(this);
  }
}

export class ClaimPrizeCall__Inputs {
  _call: ClaimPrizeCall;

  constructor(call: ClaimPrizeCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get puzzleId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimPrizeCall__Outputs {
  _call: ClaimPrizeCall;

  constructor(call: ClaimPrizeCall) {
    this._call = call;
  }
}

export class CreateListingCall extends ethereum.Call {
  get inputs(): CreateListingCall__Inputs {
    return new CreateListingCall__Inputs(this);
  }

  get outputs(): CreateListingCall__Outputs {
    return new CreateListingCall__Outputs(this);
  }
}

export class CreateListingCall__Inputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }

  get sellerTokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get wants(): string {
    return this._call.inputValues[1].value.toString();
  }

  get seller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateListingCall__Outputs {
  _call: CreateListingCall;

  constructor(call: CreateListingCall) {
    this._call = call;
  }
}

export class FulfillListingCall extends ethereum.Call {
  get inputs(): FulfillListingCall__Inputs {
    return new FulfillListingCall__Inputs(this);
  }

  get outputs(): FulfillListingCall__Outputs {
    return new FulfillListingCall__Outputs(this);
  }
}

export class FulfillListingCall__Inputs {
  _call: FulfillListingCall;

  constructor(call: FulfillListingCall) {
    this._call = call;
  }

  get sellerTokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get buyerTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get seller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get buyer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class FulfillListingCall__Outputs {
  _call: FulfillListingCall;

  constructor(call: FulfillListingCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveWhitelistedAddressCall extends ethereum.Call {
  get inputs(): RemoveWhitelistedAddressCall__Inputs {
    return new RemoveWhitelistedAddressCall__Inputs(this);
  }

  get outputs(): RemoveWhitelistedAddressCall__Outputs {
    return new RemoveWhitelistedAddressCall__Outputs(this);
  }
}

export class RemoveWhitelistedAddressCall__Inputs {
  _call: RemoveWhitelistedAddressCall;

  constructor(call: RemoveWhitelistedAddressCall) {
    this._call = call;
  }

  get whitelist(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveWhitelistedAddressCall__Outputs {
  _call: RemoveWhitelistedAddressCall;

  constructor(call: RemoveWhitelistedAddressCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReplaceOrEndPuzzleCall extends ethereum.Call {
  get inputs(): ReplaceOrEndPuzzleCall__Inputs {
    return new ReplaceOrEndPuzzleCall__Inputs(this);
  }

  get outputs(): ReplaceOrEndPuzzleCall__Outputs {
    return new ReplaceOrEndPuzzleCall__Outputs(this);
  }
}

export class ReplaceOrEndPuzzleCall__Inputs {
  _call: ReplaceOrEndPuzzleCall;

  constructor(call: ReplaceOrEndPuzzleCall) {
    this._call = call;
  }

  get puzzleGroupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get oldPuzzleId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get oldPuzzleWinner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get oldPuzzlePieces(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get newPuzzleId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get newPuzzlePieces(): Array<string> {
    return this._call.inputValues[5].value.toStringArray();
  }

  get newPuzzleMaxWinners(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get newPuzzlePrizes(): Array<string> {
    return this._call.inputValues[7].value.toStringArray();
  }
}

export class ReplaceOrEndPuzzleCall__Outputs {
  _call: ReplaceOrEndPuzzleCall;

  constructor(call: ReplaceOrEndPuzzleCall) {
    this._call = call;
  }
}

export class SetPackPurchaseStatusForGroupCall extends ethereum.Call {
  get inputs(): SetPackPurchaseStatusForGroupCall__Inputs {
    return new SetPackPurchaseStatusForGroupCall__Inputs(this);
  }

  get outputs(): SetPackPurchaseStatusForGroupCall__Outputs {
    return new SetPackPurchaseStatusForGroupCall__Outputs(this);
  }
}

export class SetPackPurchaseStatusForGroupCall__Inputs {
  _call: SetPackPurchaseStatusForGroupCall;

  constructor(call: SetPackPurchaseStatusForGroupCall) {
    this._call = call;
  }

  get puzzleGroupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get packPurchaseStatus(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPackPurchaseStatusForGroupCall__Outputs {
  _call: SetPackPurchaseStatusForGroupCall;

  constructor(call: SetPackPurchaseStatusForGroupCall) {
    this._call = call;
  }
}

export class SetPackTierContentsSizeCall extends ethereum.Call {
  get inputs(): SetPackTierContentsSizeCall__Inputs {
    return new SetPackTierContentsSizeCall__Inputs(this);
  }

  get outputs(): SetPackTierContentsSizeCall__Outputs {
    return new SetPackTierContentsSizeCall__Outputs(this);
  }
}

export class SetPackTierContentsSizeCall__Inputs {
  _call: SetPackTierContentsSizeCall;

  constructor(call: SetPackTierContentsSizeCall) {
    this._call = call;
  }

  get _size(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tier(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetPackTierContentsSizeCall__Outputs {
  _call: SetPackTierContentsSizeCall;

  constructor(call: SetPackTierContentsSizeCall) {
    this._call = call;
  }
}

export class SetPackTierPriceInWeiCall extends ethereum.Call {
  get inputs(): SetPackTierPriceInWeiCall__Inputs {
    return new SetPackTierPriceInWeiCall__Inputs(this);
  }

  get outputs(): SetPackTierPriceInWeiCall__Outputs {
    return new SetPackTierPriceInWeiCall__Outputs(this);
  }
}

export class SetPackTierPriceInWeiCall__Inputs {
  _call: SetPackTierPriceInWeiCall;

  constructor(call: SetPackTierPriceInWeiCall) {
    this._call = call;
  }

  get _packTierPriceInWei(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tier(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetPackTierPriceInWeiCall__Outputs {
  _call: SetPackTierPriceInWeiCall;

  constructor(call: SetPackTierPriceInWeiCall) {
    this._call = call;
  }
}

export class SetSlowModeCall extends ethereum.Call {
  get inputs(): SetSlowModeCall__Inputs {
    return new SetSlowModeCall__Inputs(this);
  }

  get outputs(): SetSlowModeCall__Outputs {
    return new SetSlowModeCall__Outputs(this);
  }
}

export class SetSlowModeCall__Inputs {
  _call: SetSlowModeCall;

  constructor(call: SetSlowModeCall) {
    this._call = call;
  }

  get setMode(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetSlowModeCall__Outputs {
  _call: SetSlowModeCall;

  constructor(call: SetSlowModeCall) {
    this._call = call;
  }
}

export class SetSlowModeTimeCall extends ethereum.Call {
  get inputs(): SetSlowModeTimeCall__Inputs {
    return new SetSlowModeTimeCall__Inputs(this);
  }

  get outputs(): SetSlowModeTimeCall__Outputs {
    return new SetSlowModeTimeCall__Outputs(this);
  }
}

export class SetSlowModeTimeCall__Inputs {
  _call: SetSlowModeTimeCall;

  constructor(call: SetSlowModeTimeCall) {
    this._call = call;
  }

  get time(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSlowModeTimeCall__Outputs {
  _call: SetSlowModeTimeCall;

  constructor(call: SetSlowModeTimeCall) {
    this._call = call;
  }
}

export class StartNewPuzzleCall extends ethereum.Call {
  get inputs(): StartNewPuzzleCall__Inputs {
    return new StartNewPuzzleCall__Inputs(this);
  }

  get outputs(): StartNewPuzzleCall__Outputs {
    return new StartNewPuzzleCall__Outputs(this);
  }
}

export class StartNewPuzzleCall__Inputs {
  _call: StartNewPuzzleCall;

  constructor(call: StartNewPuzzleCall) {
    this._call = call;
  }

  get puzzleGroupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get puzzleId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get pieces(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get maxWinners(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get prizes(): Array<string> {
    return this._call.inputValues[4].value.toStringArray();
  }
}

export class StartNewPuzzleCall__Outputs {
  _call: StartNewPuzzleCall;

  constructor(call: StartNewPuzzleCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferPieceCall extends ethereum.Call {
  get inputs(): TransferPieceCall__Inputs {
    return new TransferPieceCall__Inputs(this);
  }

  get outputs(): TransferPieceCall__Outputs {
    return new TransferPieceCall__Outputs(this);
  }
}

export class TransferPieceCall__Inputs {
  _call: TransferPieceCall;

  constructor(call: TransferPieceCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferPieceCall__Outputs {
  _call: TransferPieceCall;

  constructor(call: TransferPieceCall) {
    this._call = call;
  }
}

export class UnboxPackCall extends ethereum.Call {
  get inputs(): UnboxPackCall__Inputs {
    return new UnboxPackCall__Inputs(this);
  }

  get outputs(): UnboxPackCall__Outputs {
    return new UnboxPackCall__Outputs(this);
  }
}

export class UnboxPackCall__Inputs {
  _call: UnboxPackCall;

  constructor(call: UnboxPackCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UnboxPackCall__Outputs {
  _call: UnboxPackCall;

  constructor(call: UnboxPackCall) {
    this._call = call;
  }

  get value0(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WhitelistAddressCall extends ethereum.Call {
  get inputs(): WhitelistAddressCall__Inputs {
    return new WhitelistAddressCall__Inputs(this);
  }

  get outputs(): WhitelistAddressCall__Outputs {
    return new WhitelistAddressCall__Outputs(this);
  }
}

export class WhitelistAddressCall__Inputs {
  _call: WhitelistAddressCall;

  constructor(call: WhitelistAddressCall) {
    this._call = call;
  }

  get whitelist(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistAddressCall__Outputs {
  _call: WhitelistAddressCall;

  constructor(call: WhitelistAddressCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawDaiCall extends ethereum.Call {
  get inputs(): WithdrawDaiCall__Inputs {
    return new WithdrawDaiCall__Inputs(this);
  }

  get outputs(): WithdrawDaiCall__Outputs {
    return new WithdrawDaiCall__Outputs(this);
  }
}

export class WithdrawDaiCall__Inputs {
  _call: WithdrawDaiCall;

  constructor(call: WithdrawDaiCall) {
    this._call = call;
  }
}

export class WithdrawDaiCall__Outputs {
  _call: WithdrawDaiCall;

  constructor(call: WithdrawDaiCall) {
    this._call = call;
  }
}
